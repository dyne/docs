{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentation and Manauls at Dyne.org","text":""},{"location":"#install-dependencies","title":"Install dependencies","text":"<p>You need to have mkdocs and the material plugin installed: <pre><code>apt-get install mkdocs\npip install mkdocs-material\n</code></pre></p> <p>If your system is complaining that mkdocs-material is an externally-managed-environment, you can use <code>venv</code> instead:</p> <p>Create the virtual environment <pre><code>python -m venv path/to/venv\n</code></pre> Install mkdocs-material to the environment <pre><code>path/to/venv/bin/pip install mkdocs-material\n</code></pre></p> <p>Activate the virtual environement <pre><code>source path/to/venv/bin/activate\n</code></pre></p>"},{"location":"#create-a-new-project","title":"Create a new project","text":"<p>Go inside the <code>src/</code> folder and use <code>mkdocs new name_of_project</code>.</p> <p>Beware the name you chose will also be in the url <code>https://dyne.org/docs/name_of_project</code>.</p> <p>Go inside the freshly created project folder and use mkdocs as usual</p> <p>\ud83d\udc41\ufe0f preview using <code>mkdocs serve</code> directly in each src/ folder.</p> <p>\u26a0\ufe0f\u26a0\ufe0f  never do <code>mkdocs deploy</code>! But instead...</p>"},{"location":"#publish-changes","title":"Publish changes","text":"<p>Go in the root of this repository and do <code>make deploy</code>.</p> <p>If there are no changes in the src files then an error will be returned and no commit created.</p> <p>Read carefully the errors returned because some warnings contain useful information.</p>"},{"location":"#further-questions","title":"Further questions","text":"<p>Ask Jaromil or Settoshi</p>"}]}